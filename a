
 
Ansible setup
 
1.  t2.micro in same region
2 intstance  
 
Controller terminal

launch controller instance 

set hostname 

vim /etc/hosts

paste the ip here controller.example.com   if you want nickname just write controller

paste ip of ans1 look at terminal tab   ans1.example.com

paste ip of ans2.example.com
 
save and exit
 
key based authentication - to manage lot of machines passwd based auth is not possible

 
 
in host machine 

vim /etc/ssh/sshd_config
 
permitRootLogin yes
 
password authentication yes
PermitEmptypassword no
 
systemctl restart sshd

systemctl enable sshd
 
passwd for root first 
controller
ssh-keygen
cd .ssh
ssh-copy-id root@ hostip
 
 
 
browser
 
install ansible in amazon Linux
yum install ansible* -y
 
 
terminal
 
 
ansible --version
 
cd /etc/ansible

pwd

vim ansible.cfg(copy paste)


# config file for ansible -- http://ansible.com/
# ==============================================

# nearly all parameters can be overridden in ansible-playbook 
# or with command line flags. ansible will read ANSIBLE_CONFIG,
# ansible.cfg in the current working directory, .ansible.cfg in
# the home directory or /etc/ansible/ansible.cfg, whichever it
# finds first

[defaults]

# some basic default values...

hostfile       = /etc/ansible/hosts
library        = /usr/share/ansible
remote_tmp     = $HOME/.ansible/tmp
pattern        = *
forks          = 5
poll_interval  = 15
sudo_user      = root
#ask_sudo_pass = True
#ask_pass      = True
transport      = smart
remote_port    = 22

# additional paths to search for roles in, colon seperated
#roles_path    = /etc/ansible/roles

# uncomment this to disable SSH key host checking
#host_key_checking = False

# change this for alternative sudo implementations
sudo_exe = sudo

# what flags to pass to sudo
#sudo_flags = -H

# SSH timeout
timeout = 10

# default user to use for playbooks if user is not specified
# (/usr/bin/ansible will use current user as default)
#remote_user = root

# logging is off by default unless this path is defined
# if so defined, consider logrotate
#log_path = /var/log/ansible.log

# default module name for /usr/bin/ansible
#module_name = command

# use this shell for commands executed under sudo
# you may need to change this to bin/bash in rare instances
# if sudo is constrained
#executable = /bin/sh

# if inventory variables overlap, does the higher precedence one win
# or are hash values merged together?  The default is 'replace' but
# this can also be set to 'merge'.
#hash_behaviour = replace

# How to handle variable replacement - as of 1.2, Jinja2 variable syntax is
# preferred, but we still support the old $variable replacement too.
# Turn off ${old_style} variables here if you like.
#legacy_playbook_variables = yes

# list any Jinja2 extensions to enable here:
#jinja2_extensions = jinja2.ext.do,jinja2.ext.i18n

# if set, always use this private key file for authentication, same as 
# if passing --private-key to ansible or ansible-playbook
#private_key_file = /path/to/file

# format of string {{ ansible_managed }} available within Jinja2 
# templates indicates to users editing templates files will be replaced.
# replacing {file}, {host} and {uid} and strftime codes with proper values.
ansible_managed = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}

# by default, ansible-playbook will display "Skipping [host]" if it determines a task
# should not be run on a host.  Set this to "False" if you don't want to see these "Skipping" 
# messages. NOTE: the task header will still be shown regardless of whether or not the 
# task is skipped.
#display_skipped_hosts = True

# by default (as of 1.3), Ansible will raise errors when attempting to dereference 
# Jinja2 variables that are not set in templates or action lines. Uncomment this line
# to revert the behavior to pre-1.3.
#error_on_undefined_vars = False

# set plugin path directories here, seperate with colons
action_plugins     = /usr/share/ansible_plugins/action_plugins
callback_plugins   = /usr/share/ansible_plugins/callback_plugins
connection_plugins = /usr/share/ansible_plugins/connection_plugins
lookup_plugins     = /usr/share/ansible_plugins/lookup_plugins
vars_plugins       = /usr/share/ansible_plugins/vars_plugins
filter_plugins     = /usr/share/ansible_plugins/filter_plugins

# don't like cows?  that's unfortunate.
# set to 1 if you don't want cowsay support or export ANSIBLE_NOCOWS=1 
#nocows = 1

# don't like colors either?
# set to 1 if you don't want colors, or export ANSIBLE_NOCOLOR=1
#nocolor = 1

# the CA certificate path used for validating SSL certs. This path 
# should exist on the controlling node, not the target nodes
# common locations:
# RHEL/CentOS: /etc/pki/tls/certs/ca-bundle.crt
# Fedora     : /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
# Ubuntu     : /usr/share/ca-certificates/cacert.org/cacert.org.crt
#ca_file_path = 

# the http user-agent string to use when fetching urls. Some web server
# operators block the default urllib user agent as it is frequently used
# by malicious attacks/scripts, so we set it to something unique to 
# avoid issues.
#http_user_agent = ansible-agent

[paramiko_connection]

# uncomment this line to cause the paramiko connection plugin to not record new host
# keys encountered.  Increases performance on new host additions.  Setting works independently of the
# host key checking setting above.
#record_host_keys=False

# by default, Ansible requests a pseudo-terminal for commands executed under sudo. Uncomment this
# line to disable this behaviour.
#pty=False

[ssh_connection]

# ssh arguments to use
# Leaving off ControlPersist will result in poor performance, so use 
# paramiko on older platforms rather than removing it
#ssh_args = -o ControlMaster=auto -o ControlPersist=60s

# The path to use for the ControlPath sockets. This defaults to
# "%(directory)s/ansible-ssh-%%h-%%p-%%r", however on some systems with
# very long hostnames or very long path names (caused by long user names or 
# deeply nested home directories) this can exceed the character limit on
# file socket names (108 characters for most platforms). In that case, you 
# may wish to shorten the string below.
# 
# Example: 
# control_path = %(directory)s/%%h-%%r
#control_path = %(directory)s/ansible-ssh-%%h-%%p-%%r

# Enabling pipelining reduces the number of SSH operations required to 
# execute a module on the remote server. This can result in a significant 
# performance improvement when enabled, however when using "sudo:" you must 
# first disable 'requiretty' in /etc/sudoers
#
# By default, this option is disabled to preserve compatibility with
# sudoers configurations that have requiretty (the default on many distros).
# 
#pipelining = False

# if True, make ansible use scp if the connection type is ssh 
# (default is sftp)
#scp_if_ssh = True

[accelerate]
accelerate_port = 5099
accelerate_timeout = 30
accelerate_connect_timeout = 5.0
 
 

 
controller
 
vim hosts

[us-server]

ip of one of node-1

[india-server]

ip of node-2
 
 
start icmp port 
 
ping ip
ansible all --list-hosts
ansible all -m ping



 
ansible all --list-hosts   
 
 

ping - pong response
 
want desired output
 
ansible all -m ping -a 'data=hello'
ansible all -m file -a 'dest=/tmp/data-one state=touch'
check in host machine u will get data-one [cd /tmp/]
ansible all -m user -a 'name=Radhika uid=1100 home=/dracula state=present'
go in host M/C AND check in host u will get a user 
cat /etc/passwd
ansible all -m user -a 'name=Radhika uid=1100 home=/dracula state=absent'
go in host M/C AND check in host u will not get a user
cat /etc/passwd
ansible all -m yum -a 'name=httpd state=present'
ansible all -m systemd -a 'name=httpd state=started enabled=true'
host
rpmquery httpd

playbook
vim Radhika.yaml

---
- name: creating some user aand group
  hosts: all
 
  tasks:
            - name: create a group
              group:
                name: devops
                state: present
 
            - name: create an user thor
              user:
                  name: thor
                  uid: 1200
                  shell: /bin/bash
                  home: /home/india
                  state: present
            - name: install smb pkg
              yum:
                  name: cifs-utils
                  state: present
            - name: install ftp
              yum:
                  name: nfs-utils
                  state: present


controller
ansible-playbook Radhika.yaml --syntax-check
ansible-playbook Radhika.yaml -C
ansible-playbook Radhika.yaml


go in host
cd /etc/passwd
u will get thor user in it

2)security -http
cat index.html
helloo
vim configure.yaml
configure apache server
---
- name: configure apache server
  hosts: all
 
  tasks:
            - name: installed httpd pkg
              dnf:
                    name: httpd
                    state: latest
            - name: copy index.html file
              copy:
                    src: index.html
                    dest: /var/www/html/index.html
            - name: started apache
              systemd:
                    name: httpd
                    state: started
                    enabled: true

ansible-playbook configure.yaml
go in host
cd /var/www/html
curl http://host1.example.com
[u will get to see what is written in index.html]
also run in browser using hosts ip address 



Handler
in controller 
yum install httpd -y

vim configure-apache.yml
---
- name: configure apache with handler
  hosts: all
  tasks:
    - name: install httpd
      dnf:
        name: httpd
        state: latest
 
    - name: copy httpd.conf file to target machine
      copy:
        src: httpd.conf
        dest: /etc/httpd/conf/httpd.conf
 
    - name: copy index.html
      copy:
        src: index.html
        dest: /var/www/html
 
    - name: start and enable firewalld
      systemd:
        name: firewalld
        state: started
        enabled: true
 
    - name: restart the httpd service
      systemd:
        name: httpd
        state: restarted
        enabled: true
      notify: restart_httpd
 
    - name: configure firewalld
      firewalld:
        service: http
        permanent: yes
        state: enabled
        immediate: true
 
    - name: allow port in firewall
      firewalld:
        port: 81/tcp
        permanent: yes
        state: enabled
        immediate: true
 
  handlers:
    - name: restart_httpd
      systemd:
        name: httpd
        state: restarted

cd httpd/conf
cp httpd.conf /etc/ansible


go in host
systemctl status httpd  
it will show available















 
 
 
